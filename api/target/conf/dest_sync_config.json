{
	installationType: "destination",
	syncRootDirectory: "D:\\JEE\\Workspace\\FGH\\data\\sync",
	classPath: "D:\\JEE\\Workspace\\FGH\\openmrs-module-eptssync\\api\\target\\eptssync-api-1.0-SNAPSHOT.jar",
	mustCreateStageSchemaElements: true,
	syncStageSchema: "sync_import_stage",
	firstExport: true,
	automaticStart: false,
	
	connInfo: {
		dataBaseUserName: "root",
		dataBaseUserPassword: "root",
		connectionURI: "jdbc:mysql://localhost:3306/openmrs_module_eptssync_test?autoReconnect=true&useSSL=false",
		driveClassName: "com.mysql.jdbc.Driver"
	},
	
	operations: [
			
		{
			operationType: "database_preparation",
			maxRecordPerProcessing: 1,
			maxSupportedEngines: 1,
			minRecordsPerEngine: 1,
			disabled: false,
			processingMode: "parallel",
			
			child: {
				operationType: "pojo_generation",
				maxRecordPerProcessing: 1,
				maxSupportedEngines: 1,
				minRecordsPerEngine: 1,
				disabled: false,
				processingMode: "sequencial",	
				
				child:{
					operationType: "load",
					maxRecordPerProcessing: 1000,
					maxSupportedEngines: 5,
					minRecordsPerEngine: 100,
					disabled: false,
					processingMode: "sequencial",
					sourceFolders: ["zbz_derre"],
					
					child:{
						operationType: "synchronization",
						maxRecordPerProcessing: 1000,
						maxSupportedEngines: 1,
						minRecordsPerEngine: 100,
						doIntegrityCheckInTheEnd: true,
						disabled: false,
						processingMode: "sequencial",
						
						child: {
							operationType: "consolidation",
							maxRecordPerProcessing: 1000,
							maxSupportedEngines: 1,
							minRecordsPerEngine: 100,
							doIntegrityCheckInTheEnd: false,
							disabled: false,
							processingMode: "sequencial"
						}
					}
				}
			}
		}
	],

	tablesConfigurations:[
		  
				{	
					tableName: "users",
					parents: ["person", "users"]
				},
		
				{
					tableName: "location",
					parents: ["users", "location"],
					extraConditionForExport: "exists (select encounter_id from encounter where encounter.location_id = location.location_id)"
				},
		
				{
					tableName: "person",
					parents: ["users"]
				},
				
				{
					tableName: "person_address",
					parents: ["person", "users"]
				},
				
				{
					tableName: "person_attribute",
					parents: ["person", "users"]
				},
				
				
				{
					tableName: "person_name",
					parents: ["person", "users"]
				},
				
				{
					tableName: "patient",
					sharePkWith: "person",
					parents: ["person", "users"]
				}
				
	]
}